                                 / |                ___
                                /  (              /  /
                 ______________/    \_________   /  /
                /,   o                        `\/  /
                  \/\/\  ||                       <
                  /\/\/  || |                 _/\  \
                  `-_________\   |____-------'   \__\
                              \  |
                            _  \_|           _
                    ___ ___| |__   __ _ _ __| | __
                   / __/ __| '_ \ / _` | '__| |/ /
                   \__ \__ \ | | | (_| | |  |   <
                   |___/___/_| |_|\__,_|_|  |_|\_\



= About

Dynamic containerized SSH server provisioning.


= Usage

  PUB ssh.(sshark server id).start

    Provisions a SSH session on the given sshark server.

    `sshark server id` is the unique identifier for the target server.

    Payload: {"session":"(session id)","public_key":"(public key)"}

      `session id` is a unique identifier for the session.
      `public key` is the key to authorize access to the SSH server.

    Optional toplevel attributes:

      {"memory_limit":(memory limit)}
      {"disk_limit":(memory limit)}

      `memory limit` is the memory limit for the container, in megabytes.
      `disk limit` is the disk quota for the container, in megabytes.

      If either are omitted, there is no limit. For example, if memory is
      limited but not disk, there will be no disk limit, and vice versa.

  --------------------------------------------------

  PUB ssh.stop

    Terminate a SSH session. This destroys the container, shutting down the
    SSH server and kicking everyone off.

    Payload: {"session":"(session id)"}

      `session id` is a unique identifier for the session.

  --------------------------------------------------

  SUB ssh.advertise

    Sent periodically to allow other components to discover the sshark server.

    Payload: {"id":"(agent id)"}

      `agent id` is the unique identifier for the sshark server.
